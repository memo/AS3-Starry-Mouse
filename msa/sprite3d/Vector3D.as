/***********************************************************************BASIC 3D VECTOR CLASSv0.8.0-----------------------------------Copyright (c) 2008, Memo Akten, www.memo.tvThis program is free software: you can redistribute it and/or modifyit under the terms of the GNU General Public License as published bythe Free Software Foundation, either version 3 of the License, or(at your option) any later version.This program is distributed in the hope that it will be useful,but WITHOUT ANY WARRANTY; without even the implied warranty ofMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See theGNU General Public License for more details.You should have received a copy of the GNU General Public Licensealong with this program.  If not, see <http://www.gnu.org/licenses/>.	***********************************************************************/	package msa.sprite3d {		public class Vector3D {		public var x:Number;		public var y:Number;		public var z:Number;				// constructor		public function Vector3D(tx:Number = 0, ty:Number = 0, tz:Number = 0) 	{	set(tx, ty, tz);		}				// set the x,y,z values in one go		public function set(tx:Number = 0, ty:Number = 0, tz:Number = 0)		{	x = tx;	y = ty;	z = tz;		}				// subtract vector p2 from p1		public static function sub(p1:Vector3D, p2:Vector3D):Vector3D			{	return (new Vector3D(p1.x - p2.x, p1.y - p2.y, p1.z - p2.z) ); 		}				// add vectors p1 and p2		public static function add(p1:Vector3D, p2:Vector3D):Vector3D			{	return (new Vector3D(p1.x + p2.x, p1.y + p2.y, p1.z + p2.z) );		}				// multiply vector p with number n		public static function mult(p:Vector3D, n:Number):Vector3D				{	return (new Vector3D(p.x * n, p.y * n, p.z * n) );		}				// returns a copy (new instance) of the vector		public function clone():Vector3D 										{	return (new Vector3D(x, y, z) );		}			}}